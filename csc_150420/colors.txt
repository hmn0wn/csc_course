
import java.util.Scanner;

class Main {
    int[] vis;
    int[][] graph;
    boolean possible = true;

    public void explore(int u, int[][] g) {
        this.vis[u] = 1;

        for (int i = 0; i < g.length; i++) {
            if (g[u][i] == 1 || g[i][u] == 1) {
                if (this.vis[i] != 1) {
                    this.explore(i, g);
                }
            }
        }

    }

    public void dfs(int v, int color) {
        vis[v] = color;
        for (int i = 0; i<this.graph.length; i++) {
            if (this.graph[v][i] != 0) {
                if (vis[i] == 0) {
                    int new_color;
                    if (color == 1)
                        new_color = 2;
                    else
                        new_color = 1;
                    dfs(i, new_color);
                }
                if (vis[i] == color)
                    this.possible = false;
            }
        }
    }

    public static void main(String[] args) {
        Main dfs = new Main();

        Scanner s = new Scanner(System.in);

        int n = s.nextInt();
        int m = s.nextInt();
        dfs.graph = new int[n][n];

        for (int i = 0; i < m; i++) {
            int a = s.nextInt() - 1;
            int b = s.nextInt() - 1;
            dfs.graph[a][b] = 1;
            dfs.graph[b][a] = 1;
        }

        dfs.vis = new int[dfs.graph.length];
        for (int i = 0; i < dfs.graph.length; i++) {
            dfs.vis[i] = 0;
        }

        for (int i = 0; i < dfs.graph.length; i++){
            if (dfs.vis[i] == 0)
                dfs.dfs(i, 1);
        }
        System.out.print(dfs.possible ? "YES" : "NO");
    }
}